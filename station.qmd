---
title: "Station Forecast"
format: 
  html:
    page-layout: full
execute:
  echo: false
---

<style>
  body, .page-container, .content {
    max-width: none !important;
    width: 100% !important;
  }

  #forecast-container {
    background: white;
    padding: 20px;
    border-radius: 12px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    max-width: 100%;
    width: 100%;
    margin: 0 auto;
    box-sizing: border-box;
  }
  label {
    font-weight: bold;
    display: block;
    margin-bottom: 8px;
  }
  #station-dropdown {
    width: 100%;
    max-width: 400px;
    padding: 8px 12px;
    font-size: 14px;
    border-radius: 8px;
    border: 1px solid #ccc;
    margin-bottom: 20px;
    background-color: #f9f9f9;
    cursor: pointer;
    box-sizing: border-box;
  }
  #forecast-chart {
    width: 100%;
    height: 550px;
  }
</style>

<div id="forecast-container">
  <label for="station-dropdown">Select Station:</label>
  <select id="station-dropdown"></select>
  <div id="forecast-chart"></div>
</div>

<script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/PapaParse/5.4.1/papaparse.min.js"></script>

<script>
  // station -> skill score dictionary
  const skillScores = {
    "Ashok Vihar, Delhi - DPCC": 0.549601,
    "Bawana, Delhi - DPCC": 0.475951,
    "Dr. Karni Singh Shooting Range, Delhi - DPCC": 0.481223,
    "Dwarka-Sector 8, Delhi - DPCC": 0.389267,
    "Jahangirpuri, Delhi - DPCC": 0.321271,
    "Jawaharlal Nehru Stadium, Delhi - DPCC": 0.671313,
    "Major Dhyan Chand National Stadium, Delhi - DPCC": 0.473435,
    "Mandir Marg, Delhi - DPCC": 0.388009,
    "Mundka, Delhi - DPCC": 0.468725,
    "Najafgarh, Delhi - DPCC": -0.014836,
    "Narela, Delhi - DPCC": 0.589600,
    "Nehru Nagar, Delhi - DPCC": 0.116329,
    "Okhla Phase-2, Delhi - DPCC": 0.576590,
    "Patparganj, Delhi - DPCC": 0.493397,
    "Punjabi Bagh, Delhi - DPCC": 0.571201,
    "Pusa, Delhi - DPCC": 0.509975,
    "R K Puram, Delhi - DPCC": 0.466485,
    "Rohini, Delhi - DPCC": 0.686920,
    "Sonia Vihar, Delhi - DPCC": 0.410197,
    "Sri Aurobindo Marg, Delhi - DPCC": 0.185391,
    "Vivek Vihar, Delhi - DPCC": 0.584140,
    "Wazirpur, Delhi - DPCC": 0.503040
  };

  function getQueryParam(param) {
    const urlParams = new URLSearchParams(window.location.search);
    return urlParams.get(param);
  }

  const dropdown = document.getElementById("station-dropdown");

  const stations = Object.keys(skillScores);
  const selectedStation = getQueryParam("station") || stations[0];

  stations.forEach(station => {
    const option = document.createElement("option");
    option.value = station;
    option.text = station;
    if (station === selectedStation) option.selected = true;
    dropdown.add(option);
  });

  let allData = null;

  Papa.parse("data/dataset/timesfm_3days.csv", {
    download: true,
    header: true,
    dynamicTyping: true,
    complete: function(results) {
      allData = results.data;

      allData.forEach(row => {
        row.Timestamp = new Date(row.Timestamp);
      });

      plotForecast(selectedStation);
    },
    error: function(err) {
      console.error("CSV load error:", err);
      document.getElementById("forecast-chart").innerHTML = "<p>Failed to load data.</p>";
    }
  });

  dropdown.addEventListener("change", function() {
    const station = dropdown.value;
    
    const newUrl = window.location.pathname + "?station=" + encodeURIComponent(station);
    window.history.replaceState(null, "", newUrl);

    plotForecast(station);
  });

  function plotForecast(station) {
    if (!allData) return;

    const startDate = new Date("2023-12-18T00:00:00");
    const cutoff = new Date("2024-01-03T23:00:00");

    const stationData = allData.filter(row =>
      row.station === station &&
      row.Timestamp >= startDate &&
      row.Timestamp <= cutoff
    );

    if (stationData.length === 0) {
      document.getElementById("forecast-chart").innerHTML = "<p>No data found for this station in selected range.</p>";
      return;
    }

    const decEnd = new Date("2023-12-31T23:00:00");
    const janStart = new Date("2024-01-01T00:00:00");

    const dataBeforeJan = stationData.filter(row => row.Timestamp <= decEnd);
    const dataJan = stationData.filter(row => row.Timestamp >= janStart);

    const traces = [];

    if (dataBeforeJan.length > 0) {
      traces.push({
        x: dataBeforeJan.map(r => r.Timestamp),
        y: dataBeforeJan.map(r => r["Actual_PM2.5"]),
        mode: "lines",
        name: "Actual PM₂.₅"
      });
      traces.push({
        x: dataBeforeJan.map(r => r.Timestamp),
        y: dataBeforeJan.map(r => r["Predicted_PM2.5"]),
        mode: "lines",
        name: "Predicted PM₂.₅"
      });
    }

    if (dataJan.length > 0) {
      traces.push({
        x: dataJan.map(r => r.Timestamp),
        y: dataJan.map(r => r["Predicted_PM2.5"]),
        mode: "lines",
        name: "Forecasted PM₂.₅ (Next 3 Days)"
      });
    }

    const score = skillScores[station] !== undefined ? 
                  "Skill Score: " + skillScores[station].toFixed(3) : "";

    Plotly.newPlot("forecast-chart", traces, {
      title: station + "<br>" + score,
      xaxis: {
        title: "Timestamp",
        automargin: true
      },
      yaxis: { 
        title: "PM₂.₅ (µg/m³)",
        range: [0, 1000] 
      },
      margin: {
        l: 50,
        r: 0,
        b: 50,
        t: 50,
        pad: 4
      },
      legend: {
        x: 1,
        y: 1,
        xanchor: "right",
        yanchor: "top",
        bgcolor: "rgba(255,255,255,0.7)",
        bordercolor: "rgba(51, 51, 51, 0.3)",
        borderwidth: 1
      },
      responsive: true,
      autosize: true
    });
  }

  window.addEventListener("resize", function() {
    Plotly.Plots.resize(document.getElementById("forecast-chart"));
  });
</script>
